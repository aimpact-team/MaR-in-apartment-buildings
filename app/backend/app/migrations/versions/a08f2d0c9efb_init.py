"""init

Revision ID: a08f2d0c9efb
Revises: 
Create Date: 2023-05-20 22:05:30.823413

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "a08f2d0c9efb"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "accident_rate",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "housing_stock",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "mkd_category",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "mkd_management_status",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "mkd_status",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "roof_cleaning",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "roofing_material",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "series_of_projects",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column(
            "created", sa.Date(), server_default=sa.text("now()"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_table(
        "wall_material",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "mkd",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("login", sa.String(), nullable=True),
        sa.Column("coords", sa.String(), nullable=True),
        sa.Column("form_of_ownership", sa.String(), nullable=True),
        sa.Column("year_built", sa.Integer(), nullable=True),
        sa.Column("year_reconstructed", sa.Integer(), nullable=True),
        sa.Column("series_of_project_id", sa.Integer(), nullable=True),
        sa.Column("num_floors", sa.Integer(), nullable=True),
        sa.Column("num_entrances", sa.Integer(), nullable=True),
        sa.Column("num_apartments", sa.Integer(), nullable=True),
        sa.Column("total_area", sa.REAL(), nullable=True),
        sa.Column("living_area", sa.REAL(), nullable=True),
        sa.Column("non_living_area", sa.REAL(), nullable=True),
        sa.Column("building_volume", sa.Integer(), nullable=True),
        sa.Column("wear_and_tear", sa.Integer(), nullable=True),
        sa.Column("energy_efficiency", sa.String(), nullable=True),
        sa.Column("wall_material_id", sa.Integer(), nullable=True),
        sa.Column("accident_rate_id", sa.Integer(), nullable=True),
        sa.Column("num_passenger_elevators", sa.Integer(), nullable=True),
        sa.Column("num_freight_passenger_elevators", sa.Integer(), nullable=True),
        sa.Column("roof_cleaning_id", sa.Integer(), nullable=True),
        sa.Column("roofing_material_id", sa.Integer(), nullable=True),
        sa.Column("unom", sa.Integer(), nullable=True),
        sa.Column("housing_stock_id", sa.Integer(), nullable=True),
        sa.Column("mkd_status_id", sa.Integer(), nullable=True),
        sa.Column("mkd_management_status_id", sa.Integer(), nullable=True),
        sa.Column("num_freight_elevators", sa.Integer(), nullable=True),
        sa.Column("reason_for_status_change", sa.String(), nullable=True),
        sa.Column("mkd_category_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["accident_rate_id"],
            ["accident_rate.id"],
        ),
        sa.ForeignKeyConstraint(
            ["housing_stock_id"],
            ["housing_stock.id"],
        ),
        sa.ForeignKeyConstraint(
            ["mkd_category_id"],
            ["mkd_category.id"],
        ),
        sa.ForeignKeyConstraint(
            ["mkd_management_status_id"],
            ["mkd_management_status.id"],
        ),
        sa.ForeignKeyConstraint(
            ["mkd_status_id"],
            ["mkd_status.id"],
        ),
        sa.ForeignKeyConstraint(
            ["roof_cleaning_id"],
            ["roof_cleaning.id"],
        ),
        sa.ForeignKeyConstraint(
            ["roofing_material_id"],
            ["roofing_material.id"],
        ),
        sa.ForeignKeyConstraint(
            ["series_of_project_id"],
            ["series_of_projects.id"],
        ),
        sa.ForeignKeyConstraint(
            ["wall_material_id"],
            ["wall_material.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("unom"),
    )
    op.create_table(
        "incident",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("source", sa.String(), nullable=True),
        sa.Column("opened", sa.Date(), nullable=True),
        sa.Column("closed", sa.Date(), nullable=True),
        sa.Column("unom", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["unom"],
            ["mkd.unom"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "overhaul",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("period", sa.Integer(), nullable=True),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("num_entrance", sa.Integer(), nullable=True),
        sa.Column("elev_num", sa.String(), nullable=True),
        sa.Column("plan_start", sa.Date(), nullable=True),
        sa.Column("plan_end", sa.Date(), nullable=True),
        sa.Column("fact_start", sa.Date(), nullable=True),
        sa.Column("fact_end", sa.Date(), nullable=True),
        sa.Column("unom", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["unom"],
            ["mkd.unom"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("overhaul")
    op.drop_table("incident")
    op.drop_table("mkd")
    op.drop_table("wall_material")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_table("users")
    op.drop_table("series_of_projects")
    op.drop_table("roofing_material")
    op.drop_table("roof_cleaning")
    op.drop_table("mkd_status")
    op.drop_table("mkd_management_status")
    op.drop_table("mkd_category")
    op.drop_table("housing_stock")
    op.drop_table("accident_rate")
    # ### end Alembic commands ###
